expression
	: constant_expression

	;

/*
assignment_operator
	: '='
	| MUL_ASSIGN
	| DIV_ASSIGN
	| MOD_ASSIGN
	| ADD_ASSIGN
	| SUB_ASSIGN
	| LEFT_ASSIGN
	| RIGHT_ASSIGN
	| AND_ASSIGN
	| XOR_ASSIGN
	| OR_ASSIGN
	;
*/

/* 
assignment_expression
	: conditional_expression
	| unary_expression assignment_operator assignment_expression
	;
*/

constant_expression
	: conditional_expression
	;

/* ternary operator is removed as it is an intermidiate feature */
conditional_expression
	: logical_or_expression
/*	| logical_or_expression '?' expression ':' conditional_expression  */
	;

logical_or_expression
	: logical_and_expression
	| logical_or_expression OR_OP logical_and_expression
	;


logical_and_expression
	: inclusive_or_expression
	| logical_and_expression AND_OP inclusive_or_expression
	;


inclusive_or_expression
	: exclusive_or_expression
	| inclusive_or_expression '|' exclusive_or_expression
	;


exclusive_or_expression
	: and_expression
	| exclusive_or_expression '^' and_expression
	;


and_expression
	: equality_expression
	| and_expression '&' equality_expression
	;


equality_expression
	: relational_expression
	| equality_expression EQ_OP relational_expression
	| equality_expression NE_OP relational_expression
	;


relational_expression
	: shift_expression
	| relational_expression '<' shift_expression
	| relational_expression '>' shift_expression
	| relational_expression LE_OP shift_expression
	| relational_expression GE_OP shift_expression
	;


shift_expression
	: additive_expression
	| shift_expression LEFT_OP additive_expression
	| shift_expression RIGHT_OP additive_expression
	;